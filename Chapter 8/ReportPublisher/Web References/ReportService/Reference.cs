//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.573.
// 
namespace ReportPublisher.ReportService {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ReportingServiceSoap", Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSourceDefinitionOrReference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExpirationDefinition))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RecurrencePattern))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScheduleDefinitionOrReference))]
    public class ReportingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        public ServerInfoHeader ServerInfoHeaderValue;
        
        public BatchHeader BatchHeaderValue;
        
        public ItemNamespaceHeader ItemNamespaceHeaderValue;
        
        public SessionHeader SessionHeaderValue;
        
        /// <remarks/>
        public ReportingService() {
            this.Url = "http://hwc04/ReportServer/ReportService.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/ListSe" +
"cureMethods", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ListSecureMethods() {
            object[] results = this.Invoke("ListSecureMethods", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListSecureMethods(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListSecureMethods", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndListSecureMethods(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Create" +
"Batch", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("BatchID")]
        public string CreateBatch() {
            object[] results = this.Invoke("CreateBatch", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateBatch(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateBatch", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateBatch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Cancel" +
"Batch", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelBatch() {
            this.Invoke("CancelBatch", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCancelBatch(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CancelBatch", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCancelBatch(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Execut" +
"eBatch", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExecuteBatch() {
            this.Invoke("ExecuteBatch", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginExecuteBatch(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ExecuteBatch", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndExecuteBatch(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetSys" +
"temProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Values")]
        public Property[] GetSystemProperties(Property[] Properties) {
            object[] results = this.Invoke("GetSystemProperties", new object[] {
                        Properties});
            return ((Property[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSystemProperties(Property[] Properties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSystemProperties", new object[] {
                        Properties}, callback, asyncState);
        }
        
        /// <remarks/>
        public Property[] EndGetSystemProperties(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Property[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/SetSys" +
"temProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetSystemProperties(Property[] Properties) {
            this.Invoke("SetSystemProperties", new object[] {
                        Properties});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetSystemProperties(Property[] Properties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetSystemProperties", new object[] {
                        Properties}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetSystemProperties(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Delete" +
"Item", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteItem(string Item) {
            this.Invoke("DeleteItem", new object[] {
                        Item});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteItem(string Item, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteItem", new object[] {
                        Item}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteItem(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/MoveIt" +
"em", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MoveItem(string Item, string Target) {
            this.Invoke("MoveItem", new object[] {
                        Item,
                        Target});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveItem(string Item, string Target, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveItem", new object[] {
                        Item,
                        Target}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndMoveItem(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/ListCh" +
"ildren", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("CatalogItems")]
        public CatalogItem[] ListChildren(string Item, bool Recursive) {
            object[] results = this.Invoke("ListChildren", new object[] {
                        Item,
                        Recursive});
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListChildren(string Item, bool Recursive, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListChildren", new object[] {
                        Item,
                        Recursive}, callback, asyncState);
        }
        
        /// <remarks/>
        public CatalogItem[] EndListChildren(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ItemNamespaceHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetPro" +
"perties", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Values")]
        public Property[] GetProperties(string Item, Property[] Properties) {
            object[] results = this.Invoke("GetProperties", new object[] {
                        Item,
                        Properties});
            return ((Property[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProperties(string Item, Property[] Properties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProperties", new object[] {
                        Item,
                        Properties}, callback, asyncState);
        }
        
        /// <remarks/>
        public Property[] EndGetProperties(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Property[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/SetPro" +
"perties", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetProperties(string Item, Property[] Properties) {
            this.Invoke("SetProperties", new object[] {
                        Item,
                        Properties});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetProperties(string Item, Property[] Properties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetProperties", new object[] {
                        Item,
                        Properties}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetProperties(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetIte" +
"mType", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Type")]
        public ItemTypeEnum GetItemType(string Item) {
            object[] results = this.Invoke("GetItemType", new object[] {
                        Item});
            return ((ItemTypeEnum)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemType(string Item, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemType", new object[] {
                        Item}, callback, asyncState);
        }
        
        /// <remarks/>
        public ItemTypeEnum EndGetItemType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ItemTypeEnum)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Create" +
"Folder", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateFolder(string Folder, string Parent, Property[] Properties) {
            this.Invoke("CreateFolder", new object[] {
                        Folder,
                        Parent,
                        Properties});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateFolder(string Folder, string Parent, Property[] Properties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateFolder", new object[] {
                        Folder,
                        Parent,
                        Properties}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCreateFolder(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Create" +
"Report", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Warnings")]
        public Warning[] CreateReport(string Report, string Parent, bool Overwrite, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] System.Byte[] Definition, Property[] Properties) {
            object[] results = this.Invoke("CreateReport", new object[] {
                        Report,
                        Parent,
                        Overwrite,
                        Definition,
                        Properties});
            return ((Warning[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateReport(string Report, string Parent, bool Overwrite, System.Byte[] Definition, Property[] Properties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateReport", new object[] {
                        Report,
                        Parent,
                        Overwrite,
                        Definition,
                        Properties}, callback, asyncState);
        }
        
        /// <remarks/>
        public Warning[] EndCreateReport(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Warning[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetRep" +
"ortDefinition", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Definition", DataType="base64Binary")]
        public System.Byte[] GetReportDefinition(string Report) {
            object[] results = this.Invoke("GetReportDefinition", new object[] {
                        Report});
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReportDefinition(string Report, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReportDefinition", new object[] {
                        Report}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Byte[] EndGetReportDefinition(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/SetRep" +
"ortDefinition", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Warnings")]
        public Warning[] SetReportDefinition(string Report, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] System.Byte[] Definition) {
            object[] results = this.Invoke("SetReportDefinition", new object[] {
                        Report,
                        Definition});
            return ((Warning[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetReportDefinition(string Report, System.Byte[] Definition, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetReportDefinition", new object[] {
                        Report,
                        Definition}, callback, asyncState);
        }
        
        /// <remarks/>
        public Warning[] EndSetReportDefinition(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Warning[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Create" +
"Resource", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateResource(string Resource, string Parent, bool Overwrite, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] System.Byte[] Contents, string MimeType, Property[] Properties) {
            this.Invoke("CreateResource", new object[] {
                        Resource,
                        Parent,
                        Overwrite,
                        Contents,
                        MimeType,
                        Properties});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateResource(string Resource, string Parent, bool Overwrite, System.Byte[] Contents, string MimeType, Property[] Properties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateResource", new object[] {
                        Resource,
                        Parent,
                        Overwrite,
                        Contents,
                        MimeType,
                        Properties}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCreateResource(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/SetRes" +
"ourceContents", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetResourceContents(string Resource, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] System.Byte[] Contents, string MimeType) {
            this.Invoke("SetResourceContents", new object[] {
                        Resource,
                        Contents,
                        MimeType});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetResourceContents(string Resource, System.Byte[] Contents, string MimeType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetResourceContents", new object[] {
                        Resource,
                        Contents,
                        MimeType}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetResourceContents(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetRes" +
"ourceContents", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Contents", DataType="base64Binary")]
        public System.Byte[] GetResourceContents(string Resource, out string MimeType) {
            object[] results = this.Invoke("GetResourceContents", new object[] {
                        Resource});
            MimeType = ((string)(results[1]));
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetResourceContents(string Resource, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetResourceContents", new object[] {
                        Resource}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Byte[] EndGetResourceContents(System.IAsyncResult asyncResult, out string MimeType) {
            object[] results = this.EndInvoke(asyncResult);
            MimeType = ((string)(results[1]));
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetRep" +
"ortParameters", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Parameters")]
        public ReportParameter[] GetReportParameters(string Report, string HistoryID, bool ForRendering, ParameterValue[] Values, DataSourceCredentials[] Credentials) {
            object[] results = this.Invoke("GetReportParameters", new object[] {
                        Report,
                        HistoryID,
                        ForRendering,
                        Values,
                        Credentials});
            return ((ReportParameter[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReportParameters(string Report, string HistoryID, bool ForRendering, ParameterValue[] Values, DataSourceCredentials[] Credentials, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReportParameters", new object[] {
                        Report,
                        HistoryID,
                        ForRendering,
                        Values,
                        Credentials}, callback, asyncState);
        }
        
        /// <remarks/>
        public ReportParameter[] EndGetReportParameters(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ReportParameter[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/SetRep" +
"ortParameters", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetReportParameters(string Report, ReportParameter[] Parameters) {
            this.Invoke("SetReportParameters", new object[] {
                        Report,
                        Parameters});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetReportParameters(string Report, ReportParameter[] Parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetReportParameters", new object[] {
                        Report,
                        Parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetReportParameters(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Create" +
"LinkedReport", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateLinkedReport(string Report, string Parent, string Link, Property[] Properties) {
            this.Invoke("CreateLinkedReport", new object[] {
                        Report,
                        Parent,
                        Link,
                        Properties});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateLinkedReport(string Report, string Parent, string Link, Property[] Properties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateLinkedReport", new object[] {
                        Report,
                        Parent,
                        Link,
                        Properties}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCreateLinkedReport(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetRep" +
"ortLink", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Link")]
        public string GetReportLink(string Report) {
            object[] results = this.Invoke("GetReportLink", new object[] {
                        Report});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReportLink(string Report, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReportLink", new object[] {
                        Report}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetReportLink(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/SetRep" +
"ortLink", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetReportLink(string Report, string Link) {
            this.Invoke("SetReportLink", new object[] {
                        Report,
                        Link});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetReportLink(string Report, string Link, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetReportLink", new object[] {
                        Report,
                        Link}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetReportLink(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/ListLi" +
"nkedReports", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Reports")]
        public CatalogItem[] ListLinkedReports(string Report) {
            object[] results = this.Invoke("ListLinkedReports", new object[] {
                        Report});
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListLinkedReports(string Report, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListLinkedReports", new object[] {
                        Report}, callback, asyncState);
        }
        
        /// <remarks/>
        public CatalogItem[] EndListLinkedReports(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Render" +
"", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", DataType="base64Binary")]
        public System.Byte[] Render(string Report, string Format, string HistoryID, string DeviceInfo, ParameterValue[] Parameters, DataSourceCredentials[] Credentials, string ShowHideToggle, out string Encoding, out string MimeType, out ParameterValue[] ParametersUsed, out Warning[] Warnings, out string[] StreamIds) {
            object[] results = this.Invoke("Render", new object[] {
                        Report,
                        Format,
                        HistoryID,
                        DeviceInfo,
                        Parameters,
                        Credentials,
                        ShowHideToggle});
            Encoding = ((string)(results[1]));
            MimeType = ((string)(results[2]));
            ParametersUsed = ((ParameterValue[])(results[3]));
            Warnings = ((Warning[])(results[4]));
            StreamIds = ((string[])(results[5]));
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRender(string Report, string Format, string HistoryID, string DeviceInfo, ParameterValue[] Parameters, DataSourceCredentials[] Credentials, string ShowHideToggle, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Render", new object[] {
                        Report,
                        Format,
                        HistoryID,
                        DeviceInfo,
                        Parameters,
                        Credentials,
                        ShowHideToggle}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Byte[] EndRender(System.IAsyncResult asyncResult, out string Encoding, out string MimeType, out ParameterValue[] ParametersUsed, out Warning[] Warnings, out string[] StreamIds) {
            object[] results = this.EndInvoke(asyncResult);
            Encoding = ((string)(results[1]));
            MimeType = ((string)(results[2]));
            ParametersUsed = ((ParameterValue[])(results[3]));
            Warnings = ((Warning[])(results[4]));
            StreamIds = ((string[])(results[5]));
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Render" +
"Stream", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", DataType="base64Binary")]
        public System.Byte[] RenderStream(string Report, string Format, string StreamID, string HistoryID, string DeviceInfo, ParameterValue[] Parameters, out string Encoding, out string MimeType) {
            object[] results = this.Invoke("RenderStream", new object[] {
                        Report,
                        Format,
                        StreamID,
                        HistoryID,
                        DeviceInfo,
                        Parameters});
            Encoding = ((string)(results[1]));
            MimeType = ((string)(results[2]));
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRenderStream(string Report, string Format, string StreamID, string HistoryID, string DeviceInfo, ParameterValue[] Parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RenderStream", new object[] {
                        Report,
                        Format,
                        StreamID,
                        HistoryID,
                        DeviceInfo,
                        Parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Byte[] EndRenderStream(System.IAsyncResult asyncResult, out string Encoding, out string MimeType) {
            object[] results = this.EndInvoke(asyncResult);
            Encoding = ((string)(results[1]));
            MimeType = ((string)(results[2]));
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetRen" +
"derResource", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", DataType="base64Binary")]
        public System.Byte[] GetRenderResource(string Format, string DeviceInfo, out string MimeType) {
            object[] results = this.Invoke("GetRenderResource", new object[] {
                        Format,
                        DeviceInfo});
            MimeType = ((string)(results[1]));
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRenderResource(string Format, string DeviceInfo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRenderResource", new object[] {
                        Format,
                        DeviceInfo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Byte[] EndGetRenderResource(System.IAsyncResult asyncResult, out string MimeType) {
            object[] results = this.EndInvoke(asyncResult);
            MimeType = ((string)(results[1]));
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/SetExe" +
"cutionOptions", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetExecutionOptions(string Report, ExecutionSettingEnum ExecutionSetting, [System.Xml.Serialization.XmlElementAttribute("NoSchedule", typeof(NoSchedule))] [System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", typeof(ScheduleDefinition))] [System.Xml.Serialization.XmlElementAttribute("ScheduleReference", typeof(ScheduleReference))] ScheduleDefinitionOrReference Item) {
            this.Invoke("SetExecutionOptions", new object[] {
                        Report,
                        ExecutionSetting,
                        Item});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetExecutionOptions(string Report, ExecutionSettingEnum ExecutionSetting, ScheduleDefinitionOrReference Item, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetExecutionOptions", new object[] {
                        Report,
                        ExecutionSetting,
                        Item}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetExecutionOptions(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetExe" +
"cutionOptions", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExecutionSetting")]
        public ExecutionSettingEnum GetExecutionOptions(string Report, [System.Xml.Serialization.XmlElementAttribute("NoSchedule", typeof(NoSchedule))] [System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", typeof(ScheduleDefinition))] [System.Xml.Serialization.XmlElementAttribute("ScheduleReference", typeof(ScheduleReference))] out ScheduleDefinitionOrReference Item) {
            object[] results = this.Invoke("GetExecutionOptions", new object[] {
                        Report});
            Item = ((ScheduleDefinitionOrReference)(results[1]));
            return ((ExecutionSettingEnum)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetExecutionOptions(string Report, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetExecutionOptions", new object[] {
                        Report}, callback, asyncState);
        }
        
        /// <remarks/>
        public ExecutionSettingEnum EndGetExecutionOptions(System.IAsyncResult asyncResult, out ScheduleDefinitionOrReference Item) {
            object[] results = this.EndInvoke(asyncResult);
            Item = ((ScheduleDefinitionOrReference)(results[1]));
            return ((ExecutionSettingEnum)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/SetCac" +
"heOptions", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetCacheOptions(string Report, bool CacheReport, [System.Xml.Serialization.XmlElementAttribute("ScheduleExpiration", typeof(ScheduleExpiration))] [System.Xml.Serialization.XmlElementAttribute("TimeExpiration", typeof(TimeExpiration))] ExpirationDefinition Item) {
            this.Invoke("SetCacheOptions", new object[] {
                        Report,
                        CacheReport,
                        Item});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetCacheOptions(string Report, bool CacheReport, ExpirationDefinition Item, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetCacheOptions", new object[] {
                        Report,
                        CacheReport,
                        Item}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetCacheOptions(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetCac" +
"heOptions", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CacheReport")]
        public bool GetCacheOptions(string Report, [System.Xml.Serialization.XmlElementAttribute("ScheduleExpiration", typeof(ScheduleExpiration))] [System.Xml.Serialization.XmlElementAttribute("TimeExpiration", typeof(TimeExpiration))] out ExpirationDefinition Item) {
            object[] results = this.Invoke("GetCacheOptions", new object[] {
                        Report});
            Item = ((ExpirationDefinition)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCacheOptions(string Report, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCacheOptions", new object[] {
                        Report}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetCacheOptions(System.IAsyncResult asyncResult, out ExpirationDefinition Item) {
            object[] results = this.EndInvoke(asyncResult);
            Item = ((ExpirationDefinition)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Update" +
"ReportExecutionSnapshot", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateReportExecutionSnapshot(string Report) {
            this.Invoke("UpdateReportExecutionSnapshot", new object[] {
                        Report});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateReportExecutionSnapshot(string Report, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateReportExecutionSnapshot", new object[] {
                        Report}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateReportExecutionSnapshot(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/FlushC" +
"ache", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FlushCache(string Report) {
            this.Invoke("FlushCache", new object[] {
                        Report});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFlushCache(string Report, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FlushCache", new object[] {
                        Report}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndFlushCache(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/ListJo" +
"bs", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Jobs")]
        public Job[] ListJobs() {
            object[] results = this.Invoke("ListJobs", new object[0]);
            return ((Job[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListJobs(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListJobs", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Job[] EndListJobs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Job[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Cancel" +
"Job", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CancelJob(string JobID) {
            object[] results = this.Invoke("CancelJob", new object[] {
                        JobID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCancelJob(string JobID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CancelJob", new object[] {
                        JobID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCancelJob(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Create" +
"DataSource", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateDataSource(string DataSource, string Parent, bool Overwrite, DataSourceDefinition Definition, Property[] Properties) {
            this.Invoke("CreateDataSource", new object[] {
                        DataSource,
                        Parent,
                        Overwrite,
                        Definition,
                        Properties});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateDataSource(string DataSource, string Parent, bool Overwrite, DataSourceDefinition Definition, Property[] Properties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateDataSource", new object[] {
                        DataSource,
                        Parent,
                        Overwrite,
                        Definition,
                        Properties}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCreateDataSource(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetDat" +
"aSourceContents", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Definition")]
        public DataSourceDefinition GetDataSourceContents(string DataSource) {
            object[] results = this.Invoke("GetDataSourceContents", new object[] {
                        DataSource});
            return ((DataSourceDefinition)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDataSourceContents(string DataSource, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDataSourceContents", new object[] {
                        DataSource}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSourceDefinition EndGetDataSourceContents(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSourceDefinition)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/SetDat" +
"aSourceContents", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetDataSourceContents(string DataSource, DataSourceDefinition Definition) {
            this.Invoke("SetDataSourceContents", new object[] {
                        DataSource,
                        Definition});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetDataSourceContents(string DataSource, DataSourceDefinition Definition, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetDataSourceContents", new object[] {
                        DataSource,
                        Definition}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetDataSourceContents(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Enable" +
"DataSource", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EnableDataSource(string DataSource) {
            this.Invoke("EnableDataSource", new object[] {
                        DataSource});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnableDataSource(string DataSource, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EnableDataSource", new object[] {
                        DataSource}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndEnableDataSource(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Disabl" +
"eDataSource", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DisableDataSource(string DataSource) {
            this.Invoke("DisableDataSource", new object[] {
                        DataSource});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDisableDataSource(string DataSource, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DisableDataSource", new object[] {
                        DataSource}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDisableDataSource(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/ListRe" +
"portsUsingDataSource", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Reports")]
        public CatalogItem[] ListReportsUsingDataSource(string DataSource) {
            object[] results = this.Invoke("ListReportsUsingDataSource", new object[] {
                        DataSource});
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListReportsUsingDataSource(string DataSource, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListReportsUsingDataSource", new object[] {
                        DataSource}, callback, asyncState);
        }
        
        /// <remarks/>
        public CatalogItem[] EndListReportsUsingDataSource(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/SetRep" +
"ortDataSources", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetReportDataSources(string Report, DataSource[] DataSources) {
            this.Invoke("SetReportDataSources", new object[] {
                        Report,
                        DataSources});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetReportDataSources(string Report, DataSource[] DataSources, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetReportDataSources", new object[] {
                        Report,
                        DataSources}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetReportDataSources(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetRep" +
"ortDataSources", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DataSources")]
        public DataSource[] GetReportDataSources(string Report) {
            object[] results = this.Invoke("GetReportDataSources", new object[] {
                        Report});
            return ((DataSource[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReportDataSources(string Report, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReportDataSources", new object[] {
                        Report}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSource[] EndGetReportDataSources(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSource[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetRep" +
"ortDataSourcePrompts", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DataSourcePrompts")]
        public DataSourcePrompt[] GetReportDataSourcePrompts(string Report) {
            object[] results = this.Invoke("GetReportDataSourcePrompts", new object[] {
                        Report});
            return ((DataSourcePrompt[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReportDataSourcePrompts(string Report, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReportDataSourcePrompts", new object[] {
                        Report}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSourcePrompt[] EndGetReportDataSourcePrompts(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSourcePrompt[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Create" +
"ReportHistorySnapshot", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("HistoryID")]
        public string CreateReportHistorySnapshot(string Report, out Warning[] Warnings) {
            object[] results = this.Invoke("CreateReportHistorySnapshot", new object[] {
                        Report});
            Warnings = ((Warning[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateReportHistorySnapshot(string Report, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateReportHistorySnapshot", new object[] {
                        Report}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateReportHistorySnapshot(System.IAsyncResult asyncResult, out Warning[] Warnings) {
            object[] results = this.EndInvoke(asyncResult);
            Warnings = ((Warning[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/SetRep" +
"ortHistoryOptions", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetReportHistoryOptions(string Report, bool EnableManualSnapshotCreation, bool KeepExecutionSnapshots, [System.Xml.Serialization.XmlElementAttribute("NoSchedule", typeof(NoSchedule))] [System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", typeof(ScheduleDefinition))] [System.Xml.Serialization.XmlElementAttribute("ScheduleReference", typeof(ScheduleReference))] ScheduleDefinitionOrReference Item) {
            this.Invoke("SetReportHistoryOptions", new object[] {
                        Report,
                        EnableManualSnapshotCreation,
                        KeepExecutionSnapshots,
                        Item});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetReportHistoryOptions(string Report, bool EnableManualSnapshotCreation, bool KeepExecutionSnapshots, ScheduleDefinitionOrReference Item, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetReportHistoryOptions", new object[] {
                        Report,
                        EnableManualSnapshotCreation,
                        KeepExecutionSnapshots,
                        Item}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetReportHistoryOptions(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetRep" +
"ortHistoryOptions", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("EnableManualSnapshotCreation")]
        public bool GetReportHistoryOptions(string Report, out bool KeepExecutionSnapshots, [System.Xml.Serialization.XmlElementAttribute("NoSchedule", typeof(NoSchedule))] [System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", typeof(ScheduleDefinition))] [System.Xml.Serialization.XmlElementAttribute("ScheduleReference", typeof(ScheduleReference))] out ScheduleDefinitionOrReference Item) {
            object[] results = this.Invoke("GetReportHistoryOptions", new object[] {
                        Report});
            KeepExecutionSnapshots = ((bool)(results[1]));
            Item = ((ScheduleDefinitionOrReference)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReportHistoryOptions(string Report, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReportHistoryOptions", new object[] {
                        Report}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetReportHistoryOptions(System.IAsyncResult asyncResult, out bool KeepExecutionSnapshots, out ScheduleDefinitionOrReference Item) {
            object[] results = this.EndInvoke(asyncResult);
            KeepExecutionSnapshots = ((bool)(results[1]));
            Item = ((ScheduleDefinitionOrReference)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/SetRep" +
"ortHistoryLimit", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetReportHistoryLimit(string Report, bool UseSystem, int HistoryLimit) {
            this.Invoke("SetReportHistoryLimit", new object[] {
                        Report,
                        UseSystem,
                        HistoryLimit});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetReportHistoryLimit(string Report, bool UseSystem, int HistoryLimit, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetReportHistoryLimit", new object[] {
                        Report,
                        UseSystem,
                        HistoryLimit}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetReportHistoryLimit(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetRep" +
"ortHistoryLimit", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("HistoryLimit")]
        public int GetReportHistoryLimit(string Report, out bool IsSystem, out int SystemLimit) {
            object[] results = this.Invoke("GetReportHistoryLimit", new object[] {
                        Report});
            IsSystem = ((bool)(results[1]));
            SystemLimit = ((int)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReportHistoryLimit(string Report, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReportHistoryLimit", new object[] {
                        Report}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetReportHistoryLimit(System.IAsyncResult asyncResult, out bool IsSystem, out int SystemLimit) {
            object[] results = this.EndInvoke(asyncResult);
            IsSystem = ((bool)(results[1]));
            SystemLimit = ((int)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/ListRe" +
"portHistory", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ReportHistory")]
        public ReportHistorySnapshot[] ListReportHistory(string Report) {
            object[] results = this.Invoke("ListReportHistory", new object[] {
                        Report});
            return ((ReportHistorySnapshot[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListReportHistory(string Report, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListReportHistory", new object[] {
                        Report}, callback, asyncState);
        }
        
        /// <remarks/>
        public ReportHistorySnapshot[] EndListReportHistory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ReportHistorySnapshot[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Delete" +
"ReportHistorySnapshot", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteReportHistorySnapshot(string Report, string HistoryID) {
            this.Invoke("DeleteReportHistorySnapshot", new object[] {
                        Report,
                        HistoryID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteReportHistorySnapshot(string Report, string HistoryID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteReportHistorySnapshot", new object[] {
                        Report,
                        HistoryID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteReportHistorySnapshot(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/FindIt" +
"ems", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Items")]
        public CatalogItem[] FindItems(string Folder, BooleanOperatorEnum BooleanOperator, SearchCondition[] Conditions) {
            object[] results = this.Invoke("FindItems", new object[] {
                        Folder,
                        BooleanOperator,
                        Conditions});
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindItems(string Folder, BooleanOperatorEnum BooleanOperator, SearchCondition[] Conditions, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindItems", new object[] {
                        Folder,
                        BooleanOperator,
                        Conditions}, callback, asyncState);
        }
        
        /// <remarks/>
        public CatalogItem[] EndFindItems(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Create" +
"Schedule", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ScheduleID")]
        public string CreateSchedule(string Name, ScheduleDefinition ScheduleDefinition) {
            object[] results = this.Invoke("CreateSchedule", new object[] {
                        Name,
                        ScheduleDefinition});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateSchedule(string Name, ScheduleDefinition ScheduleDefinition, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateSchedule", new object[] {
                        Name,
                        ScheduleDefinition}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateSchedule(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Delete" +
"Schedule", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSchedule(string ScheduleID) {
            this.Invoke("DeleteSchedule", new object[] {
                        ScheduleID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteSchedule(string ScheduleID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteSchedule", new object[] {
                        ScheduleID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteSchedule(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/SetSch" +
"eduleProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetScheduleProperties(string Name, string ScheduleID, ScheduleDefinition ScheduleDefinition) {
            this.Invoke("SetScheduleProperties", new object[] {
                        Name,
                        ScheduleID,
                        ScheduleDefinition});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetScheduleProperties(string Name, string ScheduleID, ScheduleDefinition ScheduleDefinition, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetScheduleProperties", new object[] {
                        Name,
                        ScheduleID,
                        ScheduleDefinition}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetScheduleProperties(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetSch" +
"eduleProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Schedule")]
        public Schedule GetScheduleProperties(string ScheduleID) {
            object[] results = this.Invoke("GetScheduleProperties", new object[] {
                        ScheduleID});
            return ((Schedule)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetScheduleProperties(string ScheduleID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetScheduleProperties", new object[] {
                        ScheduleID}, callback, asyncState);
        }
        
        /// <remarks/>
        public Schedule EndGetScheduleProperties(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Schedule)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/ListSc" +
"heduledReports", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Reports")]
        public CatalogItem[] ListScheduledReports(string ScheduleID) {
            object[] results = this.Invoke("ListScheduledReports", new object[] {
                        ScheduleID});
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListScheduledReports(string ScheduleID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListScheduledReports", new object[] {
                        ScheduleID}, callback, asyncState);
        }
        
        /// <remarks/>
        public CatalogItem[] EndListScheduledReports(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/ListSc" +
"hedules", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Schedules")]
        public Schedule[] ListSchedules() {
            object[] results = this.Invoke("ListSchedules", new object[0]);
            return ((Schedule[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListSchedules(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListSchedules", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Schedule[] EndListSchedules(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Schedule[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/PauseS" +
"chedule", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PauseSchedule(string ScheduleID) {
            this.Invoke("PauseSchedule", new object[] {
                        ScheduleID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPauseSchedule(string ScheduleID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PauseSchedule", new object[] {
                        ScheduleID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPauseSchedule(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Resume" +
"Schedule", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResumeSchedule(string ScheduleID) {
            this.Invoke("ResumeSchedule", new object[] {
                        ScheduleID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginResumeSchedule(string ScheduleID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ResumeSchedule", new object[] {
                        ScheduleID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndResumeSchedule(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Create" +
"Subscription", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("SubscriptionID")]
        public string CreateSubscription(string Report, ExtensionSettings ExtensionSettings, string Description, string EventType, string MatchData, ParameterValue[] Parameters) {
            object[] results = this.Invoke("CreateSubscription", new object[] {
                        Report,
                        ExtensionSettings,
                        Description,
                        EventType,
                        MatchData,
                        Parameters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateSubscription(string Report, ExtensionSettings ExtensionSettings, string Description, string EventType, string MatchData, ParameterValue[] Parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateSubscription", new object[] {
                        Report,
                        ExtensionSettings,
                        Description,
                        EventType,
                        MatchData,
                        Parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateSubscription(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Create" +
"DataDrivenSubscription", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("SubscriptionID")]
        public string CreateDataDrivenSubscription(string Report, ExtensionSettings ExtensionSettings, DataRetrievalPlan DataRetrievalPlan, string Description, string EventType, string MatchData, ParameterValueOrFieldReference[] Parameters) {
            object[] results = this.Invoke("CreateDataDrivenSubscription", new object[] {
                        Report,
                        ExtensionSettings,
                        DataRetrievalPlan,
                        Description,
                        EventType,
                        MatchData,
                        Parameters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateDataDrivenSubscription(string Report, ExtensionSettings ExtensionSettings, DataRetrievalPlan DataRetrievalPlan, string Description, string EventType, string MatchData, ParameterValueOrFieldReference[] Parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateDataDrivenSubscription", new object[] {
                        Report,
                        ExtensionSettings,
                        DataRetrievalPlan,
                        Description,
                        EventType,
                        MatchData,
                        Parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateDataDrivenSubscription(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/SetSub" +
"scriptionProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetSubscriptionProperties(string SubscriptionID, ExtensionSettings ExtensionSettings, string Description, string EventType, string MatchData, ParameterValue[] Parameters) {
            this.Invoke("SetSubscriptionProperties", new object[] {
                        SubscriptionID,
                        ExtensionSettings,
                        Description,
                        EventType,
                        MatchData,
                        Parameters});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetSubscriptionProperties(string SubscriptionID, ExtensionSettings ExtensionSettings, string Description, string EventType, string MatchData, ParameterValue[] Parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetSubscriptionProperties", new object[] {
                        SubscriptionID,
                        ExtensionSettings,
                        Description,
                        EventType,
                        MatchData,
                        Parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetSubscriptionProperties(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/SetDat" +
"aDrivenSubscriptionProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetDataDrivenSubscriptionProperties(string DataDrivenSubscriptionID, ExtensionSettings ExtensionSettings, DataRetrievalPlan DataRetrievalPlan, string Description, string EventType, string MatchData, ParameterValueOrFieldReference[] Parameters) {
            this.Invoke("SetDataDrivenSubscriptionProperties", new object[] {
                        DataDrivenSubscriptionID,
                        ExtensionSettings,
                        DataRetrievalPlan,
                        Description,
                        EventType,
                        MatchData,
                        Parameters});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetDataDrivenSubscriptionProperties(string DataDrivenSubscriptionID, ExtensionSettings ExtensionSettings, DataRetrievalPlan DataRetrievalPlan, string Description, string EventType, string MatchData, ParameterValueOrFieldReference[] Parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetDataDrivenSubscriptionProperties", new object[] {
                        DataDrivenSubscriptionID,
                        ExtensionSettings,
                        DataRetrievalPlan,
                        Description,
                        EventType,
                        MatchData,
                        Parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetDataDrivenSubscriptionProperties(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetSub" +
"scriptionProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Owner")]
        public string GetSubscriptionProperties(string SubscriptionID, out ExtensionSettings ExtensionSettings, out string Description, out ActiveState Active, out string Status, out string EventType, out string MatchData, out ParameterValue[] Parameters) {
            object[] results = this.Invoke("GetSubscriptionProperties", new object[] {
                        SubscriptionID});
            ExtensionSettings = ((ExtensionSettings)(results[1]));
            Description = ((string)(results[2]));
            Active = ((ActiveState)(results[3]));
            Status = ((string)(results[4]));
            EventType = ((string)(results[5]));
            MatchData = ((string)(results[6]));
            Parameters = ((ParameterValue[])(results[7]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSubscriptionProperties(string SubscriptionID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSubscriptionProperties", new object[] {
                        SubscriptionID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetSubscriptionProperties(System.IAsyncResult asyncResult, out ExtensionSettings ExtensionSettings, out string Description, out ActiveState Active, out string Status, out string EventType, out string MatchData, out ParameterValue[] Parameters) {
            object[] results = this.EndInvoke(asyncResult);
            ExtensionSettings = ((ExtensionSettings)(results[1]));
            Description = ((string)(results[2]));
            Active = ((ActiveState)(results[3]));
            Status = ((string)(results[4]));
            EventType = ((string)(results[5]));
            MatchData = ((string)(results[6]));
            Parameters = ((ParameterValue[])(results[7]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetDat" +
"aDrivenSubscriptionProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Owner")]
        public string GetDataDrivenSubscriptionProperties(string DataDrivenSubscriptionID, out ExtensionSettings ExtensionSettings, out DataRetrievalPlan DataRetrievalPlan, out string Description, out ActiveState Active, out string Status, out string EventType, out string MatchData, out ParameterValueOrFieldReference[] Parameters) {
            object[] results = this.Invoke("GetDataDrivenSubscriptionProperties", new object[] {
                        DataDrivenSubscriptionID});
            ExtensionSettings = ((ExtensionSettings)(results[1]));
            DataRetrievalPlan = ((DataRetrievalPlan)(results[2]));
            Description = ((string)(results[3]));
            Active = ((ActiveState)(results[4]));
            Status = ((string)(results[5]));
            EventType = ((string)(results[6]));
            MatchData = ((string)(results[7]));
            Parameters = ((ParameterValueOrFieldReference[])(results[8]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDataDrivenSubscriptionProperties(string DataDrivenSubscriptionID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDataDrivenSubscriptionProperties", new object[] {
                        DataDrivenSubscriptionID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetDataDrivenSubscriptionProperties(System.IAsyncResult asyncResult, out ExtensionSettings ExtensionSettings, out DataRetrievalPlan DataRetrievalPlan, out string Description, out ActiveState Active, out string Status, out string EventType, out string MatchData, out ParameterValueOrFieldReference[] Parameters) {
            object[] results = this.EndInvoke(asyncResult);
            ExtensionSettings = ((ExtensionSettings)(results[1]));
            DataRetrievalPlan = ((DataRetrievalPlan)(results[2]));
            Description = ((string)(results[3]));
            Active = ((ActiveState)(results[4]));
            Status = ((string)(results[5]));
            EventType = ((string)(results[6]));
            MatchData = ((string)(results[7]));
            Parameters = ((ParameterValueOrFieldReference[])(results[8]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Delete" +
"Subscription", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSubscription(string SubscriptionID) {
            this.Invoke("DeleteSubscription", new object[] {
                        SubscriptionID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteSubscription(string SubscriptionID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteSubscription", new object[] {
                        SubscriptionID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteSubscription(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Prepar" +
"eQuery", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DataSettings")]
        public DataSetDefinition PrepareQuery(DataSource DataSource, DataSetDefinition DataSet, out bool Changed) {
            object[] results = this.Invoke("PrepareQuery", new object[] {
                        DataSource,
                        DataSet});
            Changed = ((bool)(results[1]));
            return ((DataSetDefinition)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPrepareQuery(DataSource DataSource, DataSetDefinition DataSet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PrepareQuery", new object[] {
                        DataSource,
                        DataSet}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetDefinition EndPrepareQuery(System.IAsyncResult asyncResult, out bool Changed) {
            object[] results = this.EndInvoke(asyncResult);
            Changed = ((bool)(results[1]));
            return ((DataSetDefinition)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetExt" +
"ensionSettings", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExtensionParameters")]
        public ExtensionParameter[] GetExtensionSettings(string Extension) {
            object[] results = this.Invoke("GetExtensionSettings", new object[] {
                        Extension});
            return ((ExtensionParameter[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetExtensionSettings(string Extension, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetExtensionSettings", new object[] {
                        Extension}, callback, asyncState);
        }
        
        /// <remarks/>
        public ExtensionParameter[] EndGetExtensionSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ExtensionParameter[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Valida" +
"teExtensionSettings", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ParameterErrors")]
        public ExtensionParameter[] ValidateExtensionSettings(string Extension, ParameterValueOrFieldReference[] ParameterValues) {
            object[] results = this.Invoke("ValidateExtensionSettings", new object[] {
                        Extension,
                        ParameterValues});
            return ((ExtensionParameter[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateExtensionSettings(string Extension, ParameterValueOrFieldReference[] ParameterValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateExtensionSettings", new object[] {
                        Extension,
                        ParameterValues}, callback, asyncState);
        }
        
        /// <remarks/>
        public ExtensionParameter[] EndValidateExtensionSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ExtensionParameter[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/ListSu" +
"bscriptions", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("SubscriptionItems")]
        public Subscription[] ListSubscriptions(string Report, string Owner) {
            object[] results = this.Invoke("ListSubscriptions", new object[] {
                        Report,
                        Owner});
            return ((Subscription[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListSubscriptions(string Report, string Owner, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListSubscriptions", new object[] {
                        Report,
                        Owner}, callback, asyncState);
        }
        
        /// <remarks/>
        public Subscription[] EndListSubscriptions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Subscription[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/ListSu" +
"bscriptionsUsingDataSource", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("SubscriptionItems")]
        public Subscription[] ListSubscriptionsUsingDataSource(string DataSource) {
            object[] results = this.Invoke("ListSubscriptionsUsingDataSource", new object[] {
                        DataSource});
            return ((Subscription[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListSubscriptionsUsingDataSource(string DataSource, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListSubscriptionsUsingDataSource", new object[] {
                        DataSource}, callback, asyncState);
        }
        
        /// <remarks/>
        public Subscription[] EndListSubscriptionsUsingDataSource(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Subscription[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/ListEx" +
"tensions", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Extensions")]
        public Extension[] ListExtensions(ExtensionTypeEnum ExtensionType) {
            object[] results = this.Invoke("ListExtensions", new object[] {
                        ExtensionType});
            return ((Extension[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListExtensions(ExtensionTypeEnum ExtensionType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListExtensions", new object[] {
                        ExtensionType}, callback, asyncState);
        }
        
        /// <remarks/>
        public Extension[] EndListExtensions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Extension[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/ListEv" +
"ents", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Events")]
        public Event[] ListEvents() {
            object[] results = this.Invoke("ListEvents", new object[0]);
            return ((Event[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListEvents(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListEvents", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Event[] EndListEvents(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Event[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/FireEv" +
"ent", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FireEvent(string EventType, string EventData) {
            this.Invoke("FireEvent", new object[] {
                        EventType,
                        EventData});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFireEvent(string EventType, string EventData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FireEvent", new object[] {
                        EventType,
                        EventData}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndFireEvent(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/ListSy" +
"stemTasks", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Tasks")]
        public Task[] ListSystemTasks() {
            object[] results = this.Invoke("ListSystemTasks", new object[0]);
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListSystemTasks(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListSystemTasks", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Task[] EndListSystemTasks(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/ListTa" +
"sks", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Tasks")]
        public Task[] ListTasks() {
            object[] results = this.Invoke("ListTasks", new object[0]);
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListTasks(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListTasks", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Task[] EndListTasks(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/ListSy" +
"stemRoles", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Roles")]
        public Role[] ListSystemRoles() {
            object[] results = this.Invoke("ListSystemRoles", new object[0]);
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListSystemRoles(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListSystemRoles", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Role[] EndListSystemRoles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/ListRo" +
"les", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Roles")]
        public Role[] ListRoles() {
            object[] results = this.Invoke("ListRoles", new object[0]);
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListRoles(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListRoles", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Role[] EndListRoles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Create" +
"Role", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateRole(string Name, string Description, Task[] Tasks) {
            this.Invoke("CreateRole", new object[] {
                        Name,
                        Description,
                        Tasks});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateRole(string Name, string Description, Task[] Tasks, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateRole", new object[] {
                        Name,
                        Description,
                        Tasks}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCreateRole(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Delete" +
"Role", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRole(string Name) {
            this.Invoke("DeleteRole", new object[] {
                        Name});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteRole(string Name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteRole", new object[] {
                        Name}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteRole(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetRol" +
"eProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Tasks")]
        public Task[] GetRoleProperties(string Name, out string Description) {
            object[] results = this.Invoke("GetRoleProperties", new object[] {
                        Name});
            Description = ((string)(results[1]));
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRoleProperties(string Name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRoleProperties", new object[] {
                        Name}, callback, asyncState);
        }
        
        /// <remarks/>
        public Task[] EndGetRoleProperties(System.IAsyncResult asyncResult, out string Description) {
            object[] results = this.EndInvoke(asyncResult);
            Description = ((string)(results[1]));
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/SetRol" +
"eProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetRoleProperties(string Name, string Description, Task[] Tasks) {
            this.Invoke("SetRoleProperties", new object[] {
                        Name,
                        Description,
                        Tasks});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetRoleProperties(string Name, string Description, Task[] Tasks, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetRoleProperties", new object[] {
                        Name,
                        Description,
                        Tasks}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetRoleProperties(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetSys" +
"temPolicies", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Policies")]
        public Policy[] GetSystemPolicies() {
            object[] results = this.Invoke("GetSystemPolicies", new object[0]);
            return ((Policy[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSystemPolicies(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSystemPolicies", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Policy[] EndGetSystemPolicies(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Policy[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/SetSys" +
"temPolicies", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetSystemPolicies(Policy[] Policies) {
            this.Invoke("SetSystemPolicies", new object[] {
                        Policies});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetSystemPolicies(Policy[] Policies, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetSystemPolicies", new object[] {
                        Policies}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetSystemPolicies(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetPol" +
"icies", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Policies")]
        public Policy[] GetPolicies(string Item, out bool InheritParent) {
            object[] results = this.Invoke("GetPolicies", new object[] {
                        Item});
            InheritParent = ((bool)(results[1]));
            return ((Policy[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPolicies(string Item, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPolicies", new object[] {
                        Item}, callback, asyncState);
        }
        
        /// <remarks/>
        public Policy[] EndGetPolicies(System.IAsyncResult asyncResult, out bool InheritParent) {
            object[] results = this.EndInvoke(asyncResult);
            InheritParent = ((bool)(results[1]));
            return ((Policy[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/SetPol" +
"icies", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetPolicies(string Item, Policy[] Policies) {
            this.Invoke("SetPolicies", new object[] {
                        Item,
                        Policies});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetPolicies(string Item, Policy[] Policies, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetPolicies", new object[] {
                        Item,
                        Policies}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetPolicies(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BatchHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Inheri" +
"tParentSecurity", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InheritParentSecurity(string Item) {
            this.Invoke("InheritParentSecurity", new object[] {
                        Item});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInheritParentSecurity(string Item, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InheritParentSecurity", new object[] {
                        Item}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndInheritParentSecurity(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetSys" +
"temPermissions", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Permissions")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("Operation")]
        public string[] GetSystemPermissions() {
            object[] results = this.Invoke("GetSystemPermissions", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSystemPermissions(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSystemPermissions", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetSystemPermissions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/GetPer" +
"missions", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Permissions")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("Operation")]
        public string[] GetPermissions(string Item) {
            object[] results = this.Invoke("GetPermissions", new object[] {
                        Item});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPermissions(string Item, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPermissions", new object[] {
                        Item}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetPermissions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/LogonU" +
"ser", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LogonUser(string userName, string password, string authority) {
            this.Invoke("LogonUser", new object[] {
                        userName,
                        password,
                        authority});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogonUser(string userName, string password, string authority, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogonUser", new object[] {
                        userName,
                        password,
                        authority}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLogonUser(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices/Logoff" +
"", RequestNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Logoff() {
            this.Invoke("Logoff", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogoff(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Logoff", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLogoff(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", IsNullable=false)]
    public class ServerInfoHeader : System.Web.Services.Protocols.SoapHeader {
        
        /// <remarks/>
        public string ReportServerVersionNumber;
        
        /// <remarks/>
        public string ReportServerEdition;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class Policy {
        
        /// <remarks/>
        public string GroupUserName;
        
        /// <remarks/>
        public Role[] Roles;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class Role {
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string Description;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class Task {
        
        /// <remarks/>
        public string TaskID;
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string Description;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class Event {
        
        /// <remarks/>
        public string Type;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class Extension {
        
        /// <remarks/>
        public ExtensionTypeEnum ExtensionType;
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string LocalizedName;
        
        /// <remarks/>
        public bool Visible;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public enum ExtensionTypeEnum {
        
        /// <remarks/>
        Delivery,
        
        /// <remarks/>
        Render,
        
        /// <remarks/>
        Data,
        
        /// <remarks/>
        All,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class Subscription {
        
        /// <remarks/>
        public string SubscriptionID;
        
        /// <remarks/>
        public string Owner;
        
        /// <remarks/>
        public string Path;
        
        /// <remarks/>
        public string VirtualPath;
        
        /// <remarks/>
        public string Report;
        
        /// <remarks/>
        public ExtensionSettings DeliverySettings;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public ActiveState Active;
        
        /// <remarks/>
        public System.DateTime LastExecuted;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastExecutedSpecified;
        
        /// <remarks/>
        public string ModifiedBy;
        
        /// <remarks/>
        public System.DateTime ModifiedDate;
        
        /// <remarks/>
        public string EventType;
        
        /// <remarks/>
        public bool IsDataDriven;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class ExtensionSettings {
        
        /// <remarks/>
        public string Extension;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(ParameterValue))]
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(ParameterFieldReference))]
        public ParameterValueOrFieldReference[] ParameterValues;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class ParameterValue : ParameterValueOrFieldReference {
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string Value;
        
        /// <remarks/>
        public string Label;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ParameterFieldReference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ParameterValue))]
    public class ParameterValueOrFieldReference {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class ParameterFieldReference : ParameterValueOrFieldReference {
        
        /// <remarks/>
        public string ParameterName;
        
        /// <remarks/>
        public string FieldAlias;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class ActiveState {
        
        /// <remarks/>
        public bool DeliveryExtensionRemoved;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeliveryExtensionRemovedSpecified;
        
        /// <remarks/>
        public bool SharedDataSourceRemoved;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SharedDataSourceRemovedSpecified;
        
        /// <remarks/>
        public bool MissingParameterValue;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MissingParameterValueSpecified;
        
        /// <remarks/>
        public bool InvalidParameterValue;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InvalidParameterValueSpecified;
        
        /// <remarks/>
        public bool UnknownReportParameter;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnknownReportParameterSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class ExtensionParameter {
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string DisplayName;
        
        /// <remarks/>
        public bool Required;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RequiredSpecified;
        
        /// <remarks/>
        public bool ReadOnly;
        
        /// <remarks/>
        public string Value;
        
        /// <remarks/>
        public string Error;
        
        /// <remarks/>
        public bool Encrypted;
        
        /// <remarks/>
        public bool IsPassword;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Value")]
        public ValidValue[] ValidValues;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class ValidValue {
        
        /// <remarks/>
        public string Label;
        
        /// <remarks/>
        public string Value;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class QueryDefinition {
        
        /// <remarks/>
        public string CommandType;
        
        /// <remarks/>
        public string CommandText;
        
        /// <remarks/>
        public int Timeout;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeoutSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class Field {
        
        /// <remarks/>
        public string Alias;
        
        /// <remarks/>
        public string Name;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class DataSetDefinition {
        
        /// <remarks/>
        public Field[] Fields;
        
        /// <remarks/>
        public QueryDefinition Query;
        
        /// <remarks/>
        public SensitivityEnum CaseSensitivity;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaseSensitivitySpecified;
        
        /// <remarks/>
        public string Collation;
        
        /// <remarks/>
        public SensitivityEnum AccentSensitivity;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccentSensitivitySpecified;
        
        /// <remarks/>
        public SensitivityEnum KanatypeSensitivity;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KanatypeSensitivitySpecified;
        
        /// <remarks/>
        public SensitivityEnum WidthSensitivity;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSensitivitySpecified;
        
        /// <remarks/>
        public string Name;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public enum SensitivityEnum {
        
        /// <remarks/>
        True,
        
        /// <remarks/>
        False,
        
        /// <remarks/>
        Auto,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class DataRetrievalPlan {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("InvalidDataSourceReference", typeof(InvalidDataSourceReference))]
        [System.Xml.Serialization.XmlElementAttribute("DataSourceReference", typeof(DataSourceReference))]
        [System.Xml.Serialization.XmlElementAttribute("DataSourceDefinition", typeof(DataSourceDefinition))]
        public DataSourceDefinitionOrReference Item;
        
        /// <remarks/>
        public DataSetDefinition DataSet;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class InvalidDataSourceReference : DataSourceDefinitionOrReference {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSourceReference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InvalidDataSourceReference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSourceDefinition))]
    public class DataSourceDefinitionOrReference {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class DataSourceReference : DataSourceDefinitionOrReference {
        
        /// <remarks/>
        public string Reference;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class DataSourceDefinition : DataSourceDefinitionOrReference {
        
        /// <remarks/>
        public string Extension;
        
        /// <remarks/>
        public string ConnectString;
        
        /// <remarks/>
        public CredentialRetrievalEnum CredentialRetrieval;
        
        /// <remarks/>
        public bool WindowsCredentials;
        
        /// <remarks/>
        public bool ImpersonateUser;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImpersonateUserSpecified;
        
        /// <remarks/>
        public string Prompt;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string Password;
        
        /// <remarks/>
        public bool Enabled;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public enum CredentialRetrievalEnum {
        
        /// <remarks/>
        Prompt,
        
        /// <remarks/>
        Store,
        
        /// <remarks/>
        Integrated,
        
        /// <remarks/>
        None,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class Schedule {
        
        /// <remarks/>
        public string ScheduleID;
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public ScheduleDefinition Definition;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string Creator;
        
        /// <remarks/>
        public System.DateTime NextRunTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NextRunTimeSpecified;
        
        /// <remarks/>
        public System.DateTime LastRunTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRunTimeSpecified;
        
        /// <remarks/>
        public bool ReferencesPresent;
        
        /// <remarks/>
        public ScheduleStateEnum State;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class ScheduleDefinition : ScheduleDefinitionOrReference {
        
        /// <remarks/>
        public System.DateTime StartDateTime;
        
        /// <remarks/>
        public System.DateTime EndDate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MinuteRecurrence", typeof(MinuteRecurrence))]
        [System.Xml.Serialization.XmlElementAttribute("MonthlyRecurrence", typeof(MonthlyRecurrence))]
        [System.Xml.Serialization.XmlElementAttribute("WeeklyRecurrence", typeof(WeeklyRecurrence))]
        [System.Xml.Serialization.XmlElementAttribute("MonthlyDOWRecurrence", typeof(MonthlyDOWRecurrence))]
        [System.Xml.Serialization.XmlElementAttribute("DailyRecurrence", typeof(DailyRecurrence))]
        public RecurrencePattern Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class MinuteRecurrence : RecurrencePattern {
        
        /// <remarks/>
        public int MinutesInterval;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WeeklyRecurrence))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MinuteRecurrence))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DailyRecurrence))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MonthlyRecurrence))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MonthlyDOWRecurrence))]
    public class RecurrencePattern {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class WeeklyRecurrence : RecurrencePattern {
        
        /// <remarks/>
        public int WeeksInterval;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WeeksIntervalSpecified;
        
        /// <remarks/>
        public DaysOfWeekSelector DaysOfWeek;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class DaysOfWeekSelector {
        
        /// <remarks/>
        public bool Sunday;
        
        /// <remarks/>
        public bool Monday;
        
        /// <remarks/>
        public bool Tuesday;
        
        /// <remarks/>
        public bool Wednesday;
        
        /// <remarks/>
        public bool Thursday;
        
        /// <remarks/>
        public bool Friday;
        
        /// <remarks/>
        public bool Saturday;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class DailyRecurrence : RecurrencePattern {
        
        /// <remarks/>
        public int DaysInterval;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class MonthlyRecurrence : RecurrencePattern {
        
        /// <remarks/>
        public string Days;
        
        /// <remarks/>
        public MonthsOfYearSelector MonthsOfYear;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class MonthsOfYearSelector {
        
        /// <remarks/>
        public bool January;
        
        /// <remarks/>
        public bool February;
        
        /// <remarks/>
        public bool March;
        
        /// <remarks/>
        public bool April;
        
        /// <remarks/>
        public bool May;
        
        /// <remarks/>
        public bool June;
        
        /// <remarks/>
        public bool July;
        
        /// <remarks/>
        public bool August;
        
        /// <remarks/>
        public bool September;
        
        /// <remarks/>
        public bool October;
        
        /// <remarks/>
        public bool November;
        
        /// <remarks/>
        public bool December;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class MonthlyDOWRecurrence : RecurrencePattern {
        
        /// <remarks/>
        public WeekNumberEnum WhichWeek;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WhichWeekSpecified;
        
        /// <remarks/>
        public DaysOfWeekSelector DaysOfWeek;
        
        /// <remarks/>
        public MonthsOfYearSelector MonthsOfYear;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public enum WeekNumberEnum {
        
        /// <remarks/>
        FirstWeek,
        
        /// <remarks/>
        SecondWeek,
        
        /// <remarks/>
        ThirdWeek,
        
        /// <remarks/>
        FourthWeek,
        
        /// <remarks/>
        LastWeek,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScheduleDefinition))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScheduleReference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NoSchedule))]
    public class ScheduleDefinitionOrReference {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class ScheduleReference : ScheduleDefinitionOrReference {
        
        /// <remarks/>
        public string ScheduleID;
        
        /// <remarks/>
        public ScheduleDefinition Definition;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class NoSchedule : ScheduleDefinitionOrReference {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public enum ScheduleStateEnum {
        
        /// <remarks/>
        Ready,
        
        /// <remarks/>
        Running,
        
        /// <remarks/>
        Paused,
        
        /// <remarks/>
        Expired,
        
        /// <remarks/>
        Failing,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class ReportHistorySnapshot {
        
        /// <remarks/>
        public string HistoryID;
        
        /// <remarks/>
        public System.DateTime CreationDate;
        
        /// <remarks/>
        public int Size;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class DataSourcePrompt {
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string DataSourceID;
        
        /// <remarks/>
        public string Prompt;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class DataSource {
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("InvalidDataSourceReference", typeof(InvalidDataSourceReference))]
        [System.Xml.Serialization.XmlElementAttribute("DataSourceReference", typeof(DataSourceReference))]
        [System.Xml.Serialization.XmlElementAttribute("DataSourceDefinition", typeof(DataSourceDefinition))]
        public DataSourceDefinitionOrReference Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class Job {
        
        /// <remarks/>
        public string JobID;
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string Path;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string Machine;
        
        /// <remarks/>
        public string User;
        
        /// <remarks/>
        public System.DateTime StartDateTime;
        
        /// <remarks/>
        public JobActionEnum Action;
        
        /// <remarks/>
        public JobTypeEnum Type;
        
        /// <remarks/>
        public JobStatusEnum Status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public enum JobActionEnum {
        
        /// <remarks/>
        Render,
        
        /// <remarks/>
        SnapshotCreation,
        
        /// <remarks/>
        ReportHistoryCreation,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public enum JobTypeEnum {
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        System,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public enum JobStatusEnum {
        
        /// <remarks/>
        New,
        
        /// <remarks/>
        Running,
        
        /// <remarks/>
        CancelRequested,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TimeExpiration))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScheduleExpiration))]
    public class ExpirationDefinition {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class TimeExpiration : ExpirationDefinition {
        
        /// <remarks/>
        public int Minutes;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class ScheduleExpiration : ExpirationDefinition {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ScheduleReference", typeof(ScheduleReference))]
        [System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", typeof(ScheduleDefinition))]
        public ScheduleDefinitionOrReference Item;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class ReportParameter {
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public ParameterTypeEnum Type;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified;
        
        /// <remarks/>
        public bool Nullable;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NullableSpecified;
        
        /// <remarks/>
        public bool AllowBlank;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowBlankSpecified;
        
        /// <remarks/>
        public bool MultiValue;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultiValueSpecified;
        
        /// <remarks/>
        public bool QueryParameter;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QueryParameterSpecified;
        
        /// <remarks/>
        public string Prompt;
        
        /// <remarks/>
        public bool PromptUser;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PromptUserSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Dependency")]
        public string[] Dependencies;
        
        /// <remarks/>
        public bool ValidValuesQueryBased;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValidValuesQueryBasedSpecified;
        
        /// <remarks/>
        public ValidValue[] ValidValues;
        
        /// <remarks/>
        public bool DefaultValuesQueryBased;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultValuesQueryBasedSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Value")]
        public string[] DefaultValues;
        
        /// <remarks/>
        public ParameterStateEnum State;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StateSpecified;
        
        /// <remarks/>
        public string ErrorMessage;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public enum ParameterTypeEnum {
        
        /// <remarks/>
        Boolean,
        
        /// <remarks/>
        DateTime,
        
        /// <remarks/>
        Integer,
        
        /// <remarks/>
        Float,
        
        /// <remarks/>
        String,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public enum ParameterStateEnum {
        
        /// <remarks/>
        HasValidValue,
        
        /// <remarks/>
        MissingValidValue,
        
        /// <remarks/>
        HasOutstandingDependencies,
        
        /// <remarks/>
        DynamicValuesUnavailable,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class DataSourceCredentials {
        
        /// <remarks/>
        public string DataSourceName;
        
        /// <remarks/>
        public string UserName;
        
        /// <remarks/>
        public string Password;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class Warning {
        
        /// <remarks/>
        public string Code;
        
        /// <remarks/>
        public string Severity;
        
        /// <remarks/>
        public string ObjectName;
        
        /// <remarks/>
        public string ObjectType;
        
        /// <remarks/>
        public string Message;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class CatalogItem {
        
        /// <remarks/>
        public string ID;
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string Path;
        
        /// <remarks/>
        public string VirtualPath;
        
        /// <remarks/>
        public ItemTypeEnum Type;
        
        /// <remarks/>
        public int Size;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizeSpecified;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public bool Hidden;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified;
        
        /// <remarks/>
        public System.DateTime CreationDate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreationDateSpecified;
        
        /// <remarks/>
        public System.DateTime ModifiedDate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ModifiedDateSpecified;
        
        /// <remarks/>
        public string CreatedBy;
        
        /// <remarks/>
        public string ModifiedBy;
        
        /// <remarks/>
        public string MimeType;
        
        /// <remarks/>
        public System.DateTime ExecutionDate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExecutionDateSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public enum ItemTypeEnum {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Folder,
        
        /// <remarks/>
        Report,
        
        /// <remarks/>
        Resource,
        
        /// <remarks/>
        LinkedReport,
        
        /// <remarks/>
        DataSource,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SearchCondition))]
    public class Property {
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string Value;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public class SearchCondition : Property {
        
        /// <remarks/>
        public ConditionEnum Condition;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public enum ConditionEnum {
        
        /// <remarks/>
        Contains,
        
        /// <remarks/>
        Equals,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", IsNullable=false)]
    public class BatchHeader : System.Web.Services.Protocols.SoapHeader {
        
        /// <remarks/>
        public string BatchID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", IsNullable=false)]
    public class SessionHeader : System.Web.Services.Protocols.SoapHeader {
        
        /// <remarks/>
        public string SessionId;
        
        /// <remarks/>
        public bool IsNewExecution;
        
        /// <remarks/>
        public string ExecutionDateTime;
        
        /// <remarks/>
        public string ExpirationDateTime;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices", IsNullable=false)]
    public class ItemNamespaceHeader : System.Web.Services.Protocols.SoapHeader {
        
        /// <remarks/>
        public ItemNamespaceEnum ItemNamespace;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public enum ItemNamespaceEnum {
        
        /// <remarks/>
        PathBased,
        
        /// <remarks/>
        GUIDBased,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public enum ExecutionSettingEnum {
        
        /// <remarks/>
        Live,
        
        /// <remarks/>
        Snapshot,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2003/12/reporting/reportingservices")]
    public enum BooleanOperatorEnum {
        
        /// <remarks/>
        And,
        
        /// <remarks/>
        Or,
    }
}
